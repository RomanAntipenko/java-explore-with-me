drop table IF EXISTS events, locations, users, categories, requests, compilations_events, compilations CASCADE;

create TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT PK_USERS PRIMARY KEY (id),
    CONSTRAINT UQ_USERS_EMAIL UNIQUE (email)
    );
create TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT PK_CATEGORIES PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORIES_NAME UNIQUE (name)
    );
create TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    CONSTRAINT PK_LOCATIONS PRIMARY KEY (id)
    );
create TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(2000),
    category_id BIGINT,
    created_on TIMESTAMP NOT NULL,
    confirmed_requests BIGINT,
    description VARCHAR(7000) NOT NULL,
    event_date TIMESTAMP NOT NULL,
    initiator_id BIGINT,
    location_id BIGINT,
    paid BOOLEAN NOT NULL,
    participant_limit BIGINT DEFAULT 0,
    published_on TIMESTAMP,
    request_moderation BOOLEAN NOT NULL,
    state VARCHAR(20),
    title VARCHAR(120) NOT NULL,
    views BIGINT DEFAULT 0,
    CONSTRAINT PK_EVENTS PRIMARY KEY (id),
    CONSTRAINT FK_EVENTS_CATEGORIES FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT FK_EVENTS_USERS FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT FK_EVENTS_LOCATIONS FOREIGN KEY (location_id) REFERENCES locations (id)
    );
create TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP NOT NULL,
    requester_id BIGINT,
    status VARCHAR(20),
    event_id BIGINT,
    CONSTRAINT UQ_REQUEST UNIQUE (event_id, requester_id),
    CONSTRAINT PK_REQUESTS PRIMARY KEY (id),
    CONSTRAINT FK_REQUESTS_EVENTS FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_REQUESTS_USERS FOREIGN KEY (requester_id) REFERENCES users (id)
    );
create TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title VARCHAR(50) NOT NULL,
    CONSTRAINT PK_COMPILATIONS PRIMARY KEY (id),
    CONSTRAINT UQ_COMPILATIONS_NAME UNIQUE (title)
    );
create TABLE IF NOT EXISTS compilations_events (
    compilation_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    CONSTRAINT PK_COMPILATIONS_EVENTS PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT FK_COMPILATIONS_EVENTS_EVENT FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_COMPILATIONS_EVENTS_COMPILATION FOREIGN KEY (compilation_id) REFERENCES compilations (id)
    );